{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAeC,SAASC,cAAc,UACtCC,EAAaF,SAASC,cAAc,uBACpCE,EAAYH,SAASC,cAAc,sBACnCG,EAASJ,SAASC,cAAc,wBAgCtC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAExBA,EAAM,G,CAvCjBR,EAAae,iBAAiB,SAE9B,SAA+BC,GAC7BA,EAAMC,iBACN,IAAIC,EAAOC,SAAShB,EAAWiB,OAC3BC,EAAOF,SAASf,EAAUgB,OAC1BE,EAAUH,SAASd,EAAOe,OAC1BF,GAAQG,GAAQC,IAClBtB,EAAauB,UAAW,GAE1B,IAAK,IAAIC,EAAW,EAAGA,GAAYF,EAASE,GAAY,EACpDlB,EAAckB,EAAUN,GACvBO,MAAK,EAAClB,SAAEA,EAAQC,MAAEA,MACbD,IAAae,IACftB,EAAauB,UAAW,GAG1BG,EAAA5B,GAAS6B,OAAOC,QAAQ,uBAAqBrB,QAAiBC,MAAU,IAEzEqB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MACdD,IAAae,IACftB,EAAauB,UAAW,GAG1BG,EAAA5B,GAAS6B,OAAOG,QAAQ,sBAAoBvB,QAAeC,MAAU,IAEzEU,GAAQG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst submitButton = document.querySelector('button');\nconst firstDelay = document.querySelector('input[name=\"delay\"]');\nconst delayStep = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\n\nsubmitButton.addEventListener('click', makePromiseWithDelay);\n\nfunction makePromiseWithDelay (event) {\n  event.preventDefault();\n  let data = parseInt(firstDelay.value);\n  let step = parseInt(delayStep.value);\n  let counter = parseInt(amount.value);\n  if (data && step && counter) {\n    submitButton.disabled = true;\n  };\n  for (let position = 1; position <= counter; position += 1) {\n      createPromise(position, data)\n      .then(({ position, delay }) => {\n        if (position === counter) {\n          submitButton.disabled = false;\n        };\n        // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        if (position === counter) {\n          submitButton.disabled = false;\n        };\n        // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    data += step;\n  };\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      };\n        }, delay);\n  });\n};\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$submitButton","document","querySelector","$47d4ff9957288465$var$firstDelay","$47d4ff9957288465$var$delayStep","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","data","parseInt","value","step","counter","disabled","position1","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.c9d80b6c.js.map"}